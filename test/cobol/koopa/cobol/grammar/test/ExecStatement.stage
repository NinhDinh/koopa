package koopa.cobol.grammar.test;
grammar koopa.cobol.grammar.CobolGrammar;
tokenizer koopa.cobol.sources.test.CobolTestSource;

target execStatement;

-[ EXEC ]
-[ EXEC END-EXEC ]
-[ EXEC SQL ]
-[ EXEC DLI ]
-[ EXEC HTML ]
-[ EXEC foo ]

-[ EXECUTE ]
-[ EXECUTE END-EXEC ]
-[ EXECUTE SQL ]
-[ EXECUTE DLI ]
-[ EXECUTE HTML ]
-[ EXECUTE foo ]

+[ EXEC SQL  END-EXEC ]         # SQL
+[ EXEC CICS END-EXEC ]         # CICS
+[ EXEC DLI  END-EXEC ]         # DLI
+[ EXEC HTML END-EXEC ]         # HTML
+[ EXEC foo  END-EXEC ]         # text-data

+[ EXECUTE SQL  END-EXEC ]
+[ EXECUTE CICS END-EXEC ]
+[ EXECUTE DLI  END-EXEC ]
+[ EXECUTE HTML END-EXEC ]
+[ EXECUTE foo  END-EXEC ]

target execSQLStatement;

-[ EXEC SQL END-EXEC ]
+[ EXEC SQL INCLUDE payroll END-EXEC ]

target execCICSStatement;

-[ EXEC CICS END-EXEC ]
+[ EXEC CICS READQ TS QUEUE(W-QUEUE) INTO(W-REC) ITEM(3) END-EXEC ]
+[ EXEC CICS READQ TS QUEUE(W-QUEUE) SET(W-REC-PTR) ITEM(W-NUMB) END-EXEC ]
-[ EXEC CICS READ QUEUE TS QUEUE END-EXEC ]
+[ EXEC CICS READQ TS QUEUE(W-QUEUE) SET(W-REC-PTR) NEXT END-EXEC ]
+[ EXEC CICS READ FILE ('AFILE') RIDFLD(W-KEY) KEYLENGTH(18) INTO(W-REC) END-EXEC ]
+[ EXEC CICS READ FILE (W-FILE) RIDFLD(W-KEY) INTO(W-REC) SYSID('CICS') END-EXEC ]
+[ EXEC CICS WRITE FILE ('AFILE') RIDFLD(W-KEY) FROM(W-REC) END-EXEC ]
+[ EXEC CICS WRITE FILE('W-FILE') RIDFLD(W-KEY) FROM(W-REC) SYSID(W-CICS) END-EXEC ]
+[ EXEC CICS LINK PROGRAM('PROG1') COMMAREA(W-DATA) END-EXEC ]
+[ EXEC CICS XCTL PROGRAM(W-PGM) SYSID('CICS') END-EXEC ]
+[ EXEC CICS XCTL PROGRAM(W-PGM) SYSID(W-CICS) END-EXEC ]
+[ EXEC CICS XCTL PROGRAM('PROG1') COMMAREA(W-DATA) END-EXEC ]
+[ EXEC CICS LINK PROGRAM(W-PGM) SYSID('CICS') END-EXEC ]
-[ EXEC CICS READ DATA (WHATEVER) RID(W-KEY-WHATEVER) END-EXEC ]

target execDLIStatement;

+[ EXEC DLI END-EXEC ]
+[ EXECUTE DLI END-EXEC ]

target execHTMLStatement;

+[ EXEC HTML END-EXEC ]
+[ EXECUTE HTML END-EXEC ]
+[ EXEC HTML <h1>Hello, :name!</h1> END-EXEC ]
+[ EXECUTE HTML <h1>Hello, :name!</h1> END-EXEC ]

target execTextDataStatement;

+[ EXEC foo END-EXEC ]
+[ EXECUTE foo END-EXEC ]
