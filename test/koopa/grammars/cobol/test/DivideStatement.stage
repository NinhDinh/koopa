package koopa.grammars.cobol.test;
grammar koopa.grammars.cobol.CobolGrammar;

target division_format1;

+[ A INTO B GIVING C REMAINDER D ]
+[ A INTO B GIVING C ROUNDED REMAINDER D ]

+[ A BY B GIVING C REMAINDER D ]
+[ A BY B GIVING C ROUNDED REMAINDER D ]

+[ ZERO INTO 2 GIVING C REMAINDER D ]
+[ ZERO INTO 2 GIVING C ROUNDED REMAINDER D ]

+[ ZERO BY 2 GIVING C REMAINDER D ]
+[ ZERO BY 2 GIVING C ROUNDED REMAINDER D ]

target division_format2;

+[ A INTO B GIVING C ]
+[ A INTO B GIVING C D ]

+[ A BY B GIVING C ]
+[ A BY B GIVING C D ]

+[ A INTO B GIVING C ROUNDED ]
+[ A INTO B GIVING C ROUNDED D ROUNDED ]

+[ A BY B GIVING C ROUNDED ]
+[ A BY B GIVING C ROUNDED D ROUNDED ]

+[ ZERO INTO 2 GIVING C ]
+[ ZERO INTO 2 GIVING C D ]

+[ ZERO BY 2 GIVING C ]
+[ ZERO BY 2 GIVING C D ]

+[ ZERO INTO 2 GIVING C ROUNDED ]
+[ ZERO INTO 2 GIVING C ROUNDED D ROUNDED ]

+[ ZERO BY 2 GIVING C ROUNDED ]
+[ ZERO BY 2 GIVING C ROUNDED D ROUNDED ]

target division_format3;

+[ A INTO B ]
+[ A INTO B C ]

+[ A INTO B ROUNDED ]
+[ A INTO B ROUNDED C ROUNDED ]

+[ ZERO INTO B ]
+[ ZERO INTO B C ]

+[ ZERO INTO B ROUNDED ]
+[ ZERO INTO B ROUNDED C ROUNDED ]

target divideStatement;

+[ DIVIDE A INTO B ¥ . ]

+[ DIVIDE A INTO B GIVING C ¥ . ]

+[ DIVIDE A INTO B
     ON SIZE ERROR
        DISPLAY ¥ "OOPS" ]

+[ DIVIDE A INTO B GIVING C
     ON SIZE ERROR
        DISPLAY ¥ "OOPS" ]

+[ DIVIDE A INTO B
     SIZE ERROR
        DISPLAY ¥ "OOPS" ]

+[ DIVIDE A INTO B GIVING C
     SIZE ERROR
        DISPLAY ¥ "OOPS" ]

+[ DIVIDE A INTO B
     NOT ON SIZE ERROR
        DISPLAY ¥ "AOK" ]

+[ DIVIDE A INTO B GIVING C
     NOT ON SIZE ERROR
        DISPLAY ¥ "AOK" ]

+[ DIVIDE A INTO B
     NOT SIZE ERROR
        DISPLAY ¥ "AOK" ]

+[ DIVIDE A INTO B GIVING C
     NOT SIZE ERROR
        DISPLAY ¥ "AOK" ]

+[ DIVIDE A INTO B
     ON SIZE ERROR
        DISPLAY "OOPS"
     NOT ON SIZE ERROR
        DISPLAY ¥ "AOK" ]

+[ DIVIDE A INTO B GIVING C
     ON SIZE ERROR
        DISPLAY "OOPS"
     NOT ON SIZE ERROR
        DISPLAY ¥ "AOK" ]

+[ DIVIDE A INTO B
     ON SIZE ERROR
        DISPLAY "OOPS"
     NOT ON SIZE ERROR
        DISPLAY "AOK"
   END-DIVIDE ]

+[ DIVIDE A INTO B GIVING C
     ON SIZE ERROR
        DISPLAY "OOPS"
     NOT ON SIZE ERROR
        DISPLAY "AOK"
   END-DIVIDE ]

+[ DIVIDE A INTO B
   END-DIVIDE ]

+[ DIVIDE A INTO B GIVING C
   END-DIVIDE ]

# TALLY is a special register which can be used in arithmetic statements.
+[ DIVIDE A INTO B GIVING TALLY
   END-DIVIDE ]
